<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-19T11:38:05Z" name="Default suite" finished-at="2024-07-19T11:38:27Z" duration-ms="22037">
    <groups>
    </groups>
    <test started-at="2024-07-19T11:38:05Z" name="Default test" finished-at="2024-07-19T11:38:27Z" duration-ms="22037">
      <class name="normalFlowTest.addGoalPla_CreatePMSCycleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:normalFlowTest.addGoalPla_CreatePMSCycleTest@1b75c2e3]" started-at="2024-07-19T11:38:05Z" name="setUp" finished-at="2024-07-19T11:38:16Z" duration-ms="11327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddGoalPlan()[pri:1, instance:normalFlowTest.addGoalPla_CreatePMSCycleTest@1b75c2e3]" started-at="2024-07-19T11:38:16Z" name="testAddGoalPlan" finished-at="2024-07-19T11:38:26Z" duration-ms="9897" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at NormalFlowForEmployee.addGoalPlan.addGoalPlan1(addGoalPlan.java:54)
at normalFlowTest.addGoalPla_CreatePMSCycleTest.testAddGoalPlan(addGoalPla_CreatePMSCycleTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddGoalPlan -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:normalFlowTest.addGoalPla_CreatePMSCycleTest@1b75c2e3]" started-at="2024-07-19T11:38:26Z" name="tearDown" finished-at="2024-07-19T11:38:27Z" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- normalFlowTest.addGoalPla_CreatePMSCycleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
